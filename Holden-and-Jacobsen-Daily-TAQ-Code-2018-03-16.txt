/*
   该代码的主要功能是从 WRDS 数据库中提取每日交易和报价数据 (DTAQ)，
   进行数据清洗和处理，构建完整的国家最佳买卖报价 (NBBO)，
   计算标准的流动性度量，并将结果输出到 WRDS 云文件夹。
   
   具体来说，代码执行以下操作：
    1.  从 WRDS 数据库中提取 NBBO、报价和交易数据。
    2.  清洗 NBBO 和报价数据，删除异常值和无效数据。
    3.  将 NBBO 数据与报价数据合并，构建完整的 NBBO。
    4.  将交易数据与对应的 NBBO 数据匹配。
    5.  使用 Lee & Ready (1991), Ellis, Michaely & O'Hara (2000), 和 Chakrabarty, Li, Nguyen, & Van Ness (2006) 三种算法标记交易为买入或卖出。
    6.  计算报价价差和深度。
    7.  计算有效价差。
    8.  计算已实现价差和价格冲击。
    9.  将结果输出到 WRDS 云文件夹。
*/

/*
表格一：已知变量（直接引自数据库）
| 名字         | 含义                     | 数据库    |
|--------------|--------------------------|-----------|
| @@VARIABLE: sym_root@@sym_root   | 股票代码根                 |  taqms      |
| @@VARIABLE: sym_suffix@@sym_suffix | 股票代码后缀                | taqms      |
| @@VARIABLE: time_m@@time_m      | 交易时间                  | taqms      |
| @@VARIABLE: Qu_Cond@@Qu_Cond      | 报价条件                  |  taqms      |
| @@VARIABLE: Qu_Cancel@@Qu_Cancel    | 报价取消标志              | taqms      |
| @@VARIABLE: Best_Ask@@Best_Ask      | 最佳卖出价                |  taqms     |
| @@VARIABLE: Best_Bid@@Best_Bid      | 最佳买入价                |  taqms      |
| @@VARIABLE: Best_Asksiz@@Best_Asksiz    | 最佳卖出量（手）            |  taqms      |
| @@VARIABLE: Best_Bidsiz@@Best_Bidsiz    | 最佳买入量（手）            |  taqms      |
| @@VARIABLE: date@@date         | 交易日期                  | taqms      |
| @@VARIABLE: Ask@@Ask          | 卖出价                    |  taqms     |
| @@VARIABLE: Bid@@Bid          | 买入价                    |  taqms     |
| @@VARIABLE: Asksiz@@Asksiz       | 卖出量（手）              |  taqms      |
| @@VARIABLE: Bidsiz@@Bidsiz       | 买入量（手）              |  taqms      |
| @@VARIABLE: Qu_Source@@Qu_Source       | 报价来源                  | taqms      |
| @@VARIABLE: NatBBO_Ind@@NatBBO_Ind      | 国家最佳买卖报价指示         | taqms      |
| @@VARIABLE: Qu_SeqNum@@Qu_SeqNum   | 报价序列号                 | taqms      |
| @@VARIABLE: Tr_Corr@@Tr_Corr       | 交易更正标志              |  taqms      |
| @@VARIABLE: price@@price        | 交易价格                  | taqms      |
| @@VARIABLE: Tr_SeqNum@@Tr_SeqNum   | 交易序列号                 |  taqms      |
| @@VARIABLE: size@@size        | 交易量                    |  taqms      |
*/

/*
表格二：计算得到的变量
| 名字                      | 含义                                                                  | 公式                                              |
|---------------------------|------------------------------------------------------------------------|---------------------------------------------------|
| @@VARIABLE: Spread@@Spread                    | 买卖价差                                                                | Best_Ask - Best_Bid 或 Ask - Bid                |
| @@VARIABLE: Midpoint@@Midpoint                  | 买卖价中点                                                                | (Best_Ask + Best_Bid) / 2                         |
| @@VARIABLE: Best_BidSizeShares@@Best_BidSizeShares     | 最佳买入量（股）                                                               | Best_Bidsiz * 100                               |
| @@VARIABLE: Best_AskSizeShares@@Best_AskSizeShares     | 最佳卖出量（股）                                                               | Best_Asksiz * 100                               |
| @@VARIABLE: lmid@@lmid                     | 前一时刻的买卖价中点                                                          | lag(Midpoint)                                 |
| @@VARIABLE: lm25@@lm25                       | 前一时刻买卖价中点 - 2.5                                                       | lmid - 2.5                                      |
| @@VARIABLE: lp25@@lp25                       | 前一时刻买卖价中点 + 2.5                                                       | lmid + 2.5                                      |
| @@VARIABLE: type@@type                     | 数据类型（交易或报价）                                                                | 'T' for trade, 'Q' for quote                     |
| @@VARIABLE: QTime@@QTime                   | 最近一次报价时间                                                                |  无                                                 |
| @@VARIABLE: NBO@@NBO                      | 最近一次最佳卖出价                                                                |  无                                                 |
| @@VARIABLE: NBB@@NBB                      | 最近一次最佳买入价                                                                |  无                                                 |
| @@VARIABLE: NBOqty@@NBOqty                    | 最近一次最佳卖出量                                                             | 无                                                  |
| @@VARIABLE: NBBqty@@NBBqty                    | 最近一次最佳买入量                                                              |  无                                                 |
| @@VARIABLE: lock@@lock                     | 是否锁定市场（买卖价相同）                                                               | 1 if NBO = NBB, else 0                          |
| @@VARIABLE: cross@@cross                    | 是否交叉市场（买价高于卖价）                                                                | 1 if NBO < NBB, else 0                          |
| @@VARIABLE: direction2@@direction2                 | 交易价格方向                                                              | dif(price) after removing zero changes   |
| @@VARIABLE: BuySellLR@@BuySellLR                  | Lee & Ready (1991) 交易方向指标                                                           | 无                                                   |
| @@VARIABLE: BuySellEMO@@BuySellEMO                 | Ellis, Michaely & O'Hara (2000) 交易方向指标                                              | 无                                                   |
| @@VARIABLE: BuySellCLNV@@BuySellCLNV                | Chakrabarty, Li, Nguyen, & Van Ness (2006) 交易方向指标                                       | 无                                                   |
| @@VARIABLE: inforce@@inforce                   | 报价有效时间                                                                | abs(dif(time_m)) or max(("16:00:00.000000000"t-time_m),0) |
| @@VARIABLE: wQuotedSpread_Dollar@@wQuotedSpread_Dollar     | 时间加权美元报价价差                                                              | (Best_Ask - Best_Bid) * inforce                  |
| @@VARIABLE: wQuotedSpread_Percent@@wQuotedSpread_Percent    | 时间加权百分比报价价差                                                             | (log(Best_Ask) - log(Best_Bid)) * inforce          |
| @@VARIABLE: wBestOfrDepth_Dollar@@wBestOfrDepth_Dollar   | 时间加权最佳卖出美元深度                                                             | Best_Ask * Best_AskSizeShares * inforce          |
| @@VARIABLE: wBestBidDepth_Dollar@@wBestBidDepth_Dollar   | 时间加权最佳买入美元深度                                                              | Best_Bid * Best_BidSizeShares * inforce          |
| @@VARIABLE: wBestOfrDepth_Share@@wBestOfrDepth_Share    | 时间加权最佳卖出股票深度                                                             | Best_AskSizeShares * inforce                   |
| @@VARIABLE: wBestBidDepth_Share@@wBestBidDepth_Share    | 时间加权最佳买入股票深度                                                               | Best_BidSizeShares * inforce                   |
| @@VARIABLE: sumtime@@sumtime                      | 报价有效总时间                                                                | 无                                                 |
| @@VARIABLE: swQuotedSpread_Dollar@@swQuotedSpread_Dollar  | 报价价差（美元）时间加权总和                                                            | 无                                                   |
| @@VARIABLE: swQuotedSpread_Percent@@swQuotedSpread_Percent | 报价价差（百分比）时间加权总和                                                          | 无                                                   |
| @@VARIABLE: swBestOfrDepth_Dollar@@swBestOfrDepth_Dollar | 最佳卖出深度（美元）时间加权总和                                                          | 无                                                   |
| @@VARIABLE: swBestBidDepth_Dollar@@swBestBidDepth_Dollar | 最佳买入深度（美元）时间加权总和                                                          | 无                                                   |
| @@VARIABLE: swBestOfrDepth_Share@@swBestOfrDepth_Share  | 最佳卖出深度（股）时间加权总和                                                          | 无                                                   |
| @@VARIABLE: swBestBidDepth_Share@@swBestBidDepth_Share  | 最佳买入深度（股）时间加权总和                                                          | 无                                                   |
| @@VARIABLE: QuotedSpread_Dollar@@QuotedSpread_Dollar     | 时间加权平均美元报价价差                                                            | swQuotedSpread_Dollar / sumtime                 |
| @@VARIABLE: QuotedSpread_Percent@@QuotedSpread_Percent    | 时间加权平均百分比报价价差                                                         | swQuotedSpread_Percent / sumtime                |
| @@VARIABLE: BestOfrDepth_Dollar@@BestOfrDepth_Dollar     | 时间加权平均最佳卖出美元深度                                                             | swBestOfrDepth_Dollar / sumtime                 |
| @@VARIABLE: BestBidDepth_Dollar@@BestBidDepth_Dollar     | 时间加权平均最佳买入美元深度                                                              | swBestBidDepth_Dollar / sumtime                 |
| @@VARIABLE: BestOfrDepth_Share@@BestOfrDepth_Share      | 时间加权平均最佳卖出股票深度                                                             | swBestOfrDepth_Share / sumtime                  |
| @@VARIABLE: BestBidDepth_Share@@BestBidDepth_Share      | 时间加权平均最佳买入股票深度                                                              | swBestBidDepth_Share / sumtime                  |
| @@VARIABLE: wEffectiveSpread_Dollar@@wEffectiveSpread_Dollar  | 有效价差（美元）                                                                  | abs(price - midpoint) * 2                      |
| @@VARIABLE: wEffectiveSpread_Percent@@wEffectiveSpread_Percent | 有效价差（百分比）                                                                 | abs(log(price) - log(midpoint)) * 2             |
| @@VARIABLE: dollar@@dollar                      | 交易额                                                                   | price * size                                    |
| @@VARIABLE: wEffectiveSpread_Dollar_DW@@wEffectiveSpread_Dollar_DW | 美元加权有效价差（美元）                                                             | wEffectiveSpread_Dollar * dollar              |
| @@VARIABLE: wEffectiveSpread_Dollar_SW@@wEffectiveSpread_Dollar_SW | 股票加权有效价差（美元）                                                             | wEffectiveSpread_Dollar * size                |
| @@VARIABLE: wEffectiveSpread_Percent_DW@@wEffectiveSpread_Percent_DW| 美元加权有效价差（百分比）                                                            | wEffectiveSpread_Percent * dollar             |
| @@VARIABLE: wEffectiveSpread_Percent_SW@@wEffectiveSpread_Percent_SW| 股票加权有效价差（百分比）                                                            | wEffectiveSpread_Percent * size               |
| @@VARIABLE: sumdollar@@sumdollar                   | 交易额总和                                                                  | 无                                                |
| @@VARIABLE: sumsize@@sumsize                     | 交易量总和                                                                 | 无                                                |
| @@VARIABLE: EffectiveSpread_Dollar_Ave@@EffectiveSpread_Dollar_Ave | 平均有效价差（美元）                                                               | 无                                                  |
| @@VARIABLE: EffectiveSpread_Percent_Ave@@EffectiveSpread_Percent_Ave| 平均有效价差（百分比）                                                             | 无                                                  |
| @@VARIABLE: waEffectiveSpread_Dollar_DW@@waEffectiveSpread_Dollar_DW| 美元加权有效价差（美元）总和                                                            | 无                                                  |
| @@VARIABLE: waEffectiveSpread_Dollar_SW@@waEffectiveSpread_Dollar_SW| 股票加权有效价差（美元）总和                                                            | 无                                                  |
| @@VARIABLE: waEffectiveSpread_Percent_DW@@waEffectiveSpread_Percent_DW| 美元加权有效价差（百分比）总和                                                          | 无                                                  |
| @@VARIABLE: waEffectiveSpread_Percent_SW@@waEffectiveSpread_Percent_SW| 股票加权有效价差（百分比）总和                                                          | 无                                                  |
| @@VARIABLE: EffectiveSpread_Dollar_DW@@EffectiveSpread_Dollar_DW | 美元加权有效价差（美元）                                                               | waEffectiveSpread_Dollar_DW / sumdollar        |
| @@VARIABLE: EffectiveSpread_Dollar_SW@@EffectiveSpread_Dollar_SW | 股票加权有效价差（美元）                                                               | waEffectiveSpread_Dollar_SW / sumsize         |
| @@VARIABLE: EffectiveSpread_Percent_DW@@EffectiveSpread_Percent_DW| 美元加权有效价差（百分比）                                                             | waEffectiveSpread_Percent_DW / sumdollar       |
| @@VARIABLE: EffectiveSpread_Percent_SW@@EffectiveSpread_Percent_SW| 股票加权有效价差（百分比）                                                             | waEffectiveSpread_Percent_SW / sumsize        |
| @@VARIABLE: midpoint5@@midpoint5                  | 5分钟后的买卖价中点                                                               |  无                                                 |
| @@VARIABLE: Best_Ask5@@Best_Ask5                 | 5分钟后的最佳卖出价                                                            |  无                                                 |
| @@VARIABLE: Best_Bid5@@Best_Bid5                 | 5分钟后的最佳买入价                                                              |  无                                                 |
| @@VARIABLE: wDollarRealizedSpread_LR@@wDollarRealizedSpread_LR | Lee & Ready (1991) 美元实现价差                                                            | BuySellLR * (price - midpoint5) * 2           |
| @@VARIABLE: wDollarRealizedSpread_EMO@@wDollarRealizedSpread_EMO| Ellis, Michaely & O'Hara (2000) 美元实现价差                                              | BuySellEMO * (price - midpoint5) * 2          |
| @@VARIABLE: wDollarRealizedSpread_CLNV@@wDollarRealizedSpread_CLNV| Chakrabarty, Li, Nguyen, & Van Ness (2006) 美元实现价差                                   | BuySellCLNV * (price - midpoint5) * 2         |
| @@VARIABLE: wPercentRealizedSpread_LR@@wPercentRealizedSpread_LR| Lee & Ready (1991) 百分比实现价差                                                           | BuySellLR * (log(price) - log(midpoint5)) * 2 |
| @@VARIABLE: wPercentRealizedSpread_EMO@@wPercentRealizedSpread_EMO| Ellis, Michaely & O'Hara (2000) 百分比实现价差                                              | BuySellEMO * (log(price) - log(midpoint5)) * 2 |
| @@VARIABLE: wPercentRealizedSpread_CLNV@@wPercentRealizedSpread_CLNV| Chakrabarty, Li, Nguyen, & Van Ness (2006) 百分比实现价差                               | BuySellCLNV * (log(price) - log(midpoint5)) * 2|
| @@VARIABLE: wDollarPriceImpact_LR@@wDollarPriceImpact_LR    | Lee & Ready (1991) 美元价格冲击                                                             | BuySellLR * (midpoint5 - midpoint) * 2         |
| @@VARIABLE: wDollarPriceImpact_EMO@@wDollarPriceImpact_EMO    | Ellis, Michaely & O'Hara (2000) 美元价格冲击                                              | BuySellEMO * (midpoint5 - midpoint) * 2        |
| @@VARIABLE: wDollarPriceImpact_CLNV@@wDollarPriceImpact_CLNV    | Chakrabarty, Li, Nguyen, & Van Ness (2006) 美元价格冲击                                   | BuySellCLNV * (midpoint5 - midpoint) * 2       |
| @@VARIABLE: wPercentPriceImpact_LR@@wPercentPriceImpact_LR   | Lee & Ready (1991) 百分比价格冲击                                                          | BuySellLR * (log(midpoint5) - log(midpoint)) * 2 |
| @@VARIABLE: wPercentPriceImpact_EMO@@wPercentPriceImpact_EMO   | Ellis, Michaely & O'Hara (2000) 百分比价格冲击                                              | BuySellEMO * (log(midpoint5) - log(midpoint)) * 2|
| @@VARIABLE: wPercentPriceImpact_CLNV@@wPercentPriceImpact_CLNV   | Chakrabarty, Li, Nguyen, & Van Ness (2006) 百分比价格冲击                               | BuySellCLNV * (log(midpoint5) - log(midpoint)) * 2|
| @@VARIABLE: wDollarRealizedSpread_LR_SW@@wDollarRealizedSpread_LR_SW| Lee & Ready (1991) 股票加权美元实现价差                                                          | wDollarRealizedSpread_LR * size                |
| @@VARIABLE: wDollarRealizedSpread_LR_DW@@wDollarRealizedSpread_LR_DW| Lee & Ready (1991) 美元加权美元实现价差                                                          | wDollarRealizedSpread_LR * dollar              |
| @@VARIABLE: wPercentRealizedSpread_LR_SW@@wPercentRealizedSpread_LR_SW| Lee & Ready (1991) 股票加权百分比实现价差                                                        | wPercentRealizedSpread_LR * size               |
| @@VARIABLE: wPercentRealizedSpread_LR_DW@@wPercentRealizedSpread_LR_DW| Lee & Ready (1991) 美元加权百分比实现价差                                                        | wPercentRealizedSpread_LR * dollar             |
| @@VARIABLE: wDollarPriceImpact_LR_SW@@wDollarPriceImpact_LR_SW    | Lee & Ready (1991) 股票加权美元价格冲击                                                          | wDollarPriceImpact_LR * size                  |
| @@VARIABLE: wDollarPriceImpact_LR_DW@@wDollarPriceImpact_LR_DW    | Lee & Ready (1991) 美元加权美元价格冲击                                                          | wDollarPriceImpact_LR * dollar                |
| @@VARIABLE: wPercentPriceImpact_LR_SW@@wPercentPriceImpact_LR_SW   | Lee & Ready (1991) 股票加权百分比价格冲击                                                        | wPercentPriceImpact_LR * size                 |
| @@VARIABLE: wPercentPriceImpact_LR_DW@@wPercentPriceImpact_LR_DW   | Lee & Ready (1991) 美元加权百分比价格冲击                                                        | wPercentPriceImpact_LR * dollar               |
| @@VARIABLE: wDollarRealizedSpread_EMO_SW@@wDollarRealizedSpread_EMO_SW| Ellis, Michaely & O'Hara (2000) 股票加权美元实现价差                                           | wDollarRealizedSpread_EMO * size               |
| @@VARIABLE: wDollarRealizedSpread_EMO_DW@@wDollarRealizedSpread_EMO_DW| Ellis, Michaely & O'Hara (2000) 美元加权美元实现价差                                           | wDollarRealizedSpread_EMO * dollar             |
| @@VARIABLE: wPercentRealizedSpread_EMO_SW@@wPercentRealizedSpread_EMO_SW| Ellis, Michaely & O'Hara (2000) 股票加权百分比实现价差                                        | wPercentRealizedSpread_EMO * size              |
| @@VARIABLE: wPercentRealizedSpread_EMO_DW@@wPercentRealizedSpread_EMO_DW| Ellis, Michaely & O'Hara (2000) 美元加权百分比实现价差                                        | wPercentRealizedSpread_EMO * dollar            |
| @@VARIABLE: wDollarPriceImpact_EMO_SW@@wDollarPriceImpact_EMO_SW    | Ellis, Michaely & O'Hara (2000) 股票加权美元价格冲击                                           | wDollarPriceImpact_EMO * size                 |
| @@VARIABLE: wDollarPriceImpact_EMO_DW@@wDollarPriceImpact_EMO_DW    | Ellis, Michaely & O'Hara (2000) 美元加权美元价格冲击                                           | wDollarPriceImpact_EMO * dollar               |
| @@VARIABLE: wPercentPriceImpact_EMO_SW@@wPercentPriceImpact_EMO_SW   | Ellis, Michaely & O'Hara (2000) 股票加权百分比价格冲击                                         | wPercentPriceImpact_EMO * size                |
| @@VARIABLE: wPercentPriceImpact_EMO_DW@@wPercentPriceImpact_EMO_DW   | Ellis, Michaely & O'Hara (2000) 美元加权百分比价格冲击                                         | wPercentPriceImpact_EMO * dollar              |
| @@VARIABLE: wDollarRealizedSpread_CLNV_SW@@wDollarRealizedSpread_CLNV_SW| Chakrabarty, Li, Nguyen, & Van Ness (2006) 股票加权美元实现价差                                | wDollarRealizedSpread_CLNV * size              |
| @@VARIABLE: wDollarRealizedSpread_CLNV_DW@@wDollarRealizedSpread_CLNV_DW| Chakrabarty, Li, Nguyen, & Van Ness (2006) 美元加权美元实现价差                                | wDollarRealizedSpread_CLNV * dollar            |
| @@VARIABLE: wPercentRealizedSpread_CLNV_SW@@wPercentRealizedSpread_CLNV_SW| Chakrabarty, Li, Nguyen, & Van Ness (2006) 股票加权百分比实现价差                             | wPercentRealizedSpread_CLNV * size             |
| @@VARIABLE: wPercentRealizedSpread_CLNV_DW@@wPercentRealizedSpread_CLNV_DW| Chakrabarty, Li, Nguyen, & Van Ness (2006) 美元加权百分比实现价差                             | wPercentRealizedSpread_CLNV * dollar           |
| @@VARIABLE: wDollarPriceImpact_CLNV_SW@@wDollarPriceImpact_CLNV_SW    | Chakrabarty, Li, Nguyen, & Van Ness (2006) 股票加权美元价格冲击                               | wDollarPriceImpact_CLNV * size                |
| @@VARIABLE: wDollarPriceImpact_CLNV_DW@@wDollarPriceImpact_CLNV_DW    | Chakrabarty, Li, Nguyen, & Van Ness (2006) 美元加权美元价格冲击                               | wDollarPriceImpact_CLNV * dollar              |
| @@VARIABLE: wPercentPriceImpact_CLNV_SW@@wPercentPriceImpact_CLNV_SW   | Chakrabarty, Li, Nguyen, & Van Ness (2006) 股票加权百分比价格冲击                             | wPercentPriceImpact_CLNV * size               |
| @@VARIABLE: wPercentPriceImpact_CLNV_DW@@wPercentPriceImpact_CLNV_DW   | Chakrabarty, Li, Nguyen, & Van Ness (2006) 美元加权百分比价格冲击                             | wPercentPriceImpact_CLNV * dollar             |
| @@VARIABLE: DollarRealizedSpread_LR_Ave@@DollarRealizedSpread_LR_Ave | Lee & Ready (1991) 平均美元实现价差                                                             | 无                                                   |
| @@VARIABLE: DollarRealizedSpread_EMO_Ave@@DollarRealizedSpread_EMO_Ave| Ellis, Michaely & O'Hara (2000) 平均美元实现价差                                               | 无                                                   |
| @@VARIABLE: DollarRealizedSpread_CLNV_Ave@@DollarRealizedSpread_CLNV_Ave| Chakrabarty, Li, Nguyen, & Van Ness (2006) 平均美元实现价差                                    | 无                                                   |
| @@VARIABLE: PercentRealizedSpread_LR_Ave@@PercentRealizedSpread_LR_Ave| Lee & Ready (1991) 平均百分比实现价差                                                          | 无                                                   |
| @@VARIABLE: PercentRealizedSpread_EMO_Ave@@PercentRealizedSpread_EMO_Ave| Ellis, Michaely & O'Hara (2000) 平均百分比实现价差                                            | 无                                                   |
| @@VARIABLE: PercentRealizedSpread_CLNV_Ave@@PercentRealizedSpread_CLNV_Ave| Chakrabarty, Li, Nguyen, & Van Ness (2006) 平均百分比实现价差                                 | 无                                                   |
| @@VARIABLE: DollarPriceImpact_LR_Ave@@DollarPriceImpact_LR_Ave    | Lee & Ready (1991) 平均美元价格冲击                                                              | 无                                                   |
| @@VARIABLE: DollarPriceImpact_EMO_Ave@@DollarPriceImpact_EMO_Ave    | Ellis, Michaely & O'Hara (2000) 平均美元价格冲击                                               | 无                                                   |
| @@VARIABLE: DollarPriceImpact_CLNV_Ave@@DollarPriceImpact_CLNV_Ave    | Chakrabarty, Li, Nguyen, & Van Ness (2006) 平均美元价格冲击                                    | 无                                                   |
| @@VARIABLE: PercentPriceImpact_LR_Ave@@PercentPriceImpact_LR_Ave   | Lee & Ready (1991) 平均百分比价格冲击                                                           | 无                                                   |
| @@VARIABLE: PercentPriceImpact_EMO_Ave@@PercentPriceImpact_EMO_Ave   | Ellis, Michaely & O'Hara (2000) 平均百分比价格冲击                                            | 无                                                   |
| @@VARIABLE: PercentPriceImpact_CLNV_Ave@@PercentPriceImpact_CLNV_Ave   | Chakrabarty, Li, Nguyen, & Van Ness (2006) 平均百分比价格冲击                                 | 无                                                   |
| @@VARIABLE: waDollarRealizedSpread_LR_SW@@waDollarRealizedSpread_LR_SW| Lee & Ready (1991) 股票加权美元实现价差总和                                                           | 无                                                   |
| @@VARIABLE: waDollarRealizedSpread_LR_DW@@waDollarRealizedSpread_LR_DW| Lee & Ready (1991) 美元加权美元实现价差总和                                                           | 无                                                   |
| @@VARIABLE: waPercentRealizedSpread_LR_SW@@waPercentRealizedSpread_LR_SW| Lee & Ready (1991) 股票加权百分比实现价差总和                                                         | 无                                                   |
| @@VARIABLE: waPercentRealizedSpread_LR_DW@@waPercentRealizedSpread_LR_DW| Lee & Ready (1991) 美元加权百分比实现价差总和                                                         | 无                                                   |
| @@VARIABLE: waDollarPriceImpact_LR_SW@@waDollarPriceImpact_LR_SW    | Lee & Ready (1991) 股票加权美元价格冲击总和                                                           | 无                                                   |
| @@VARIABLE: waDollarPriceImpact_LR_DW@@waDollarPriceImpact_LR_DW    | Lee & Ready (1991) 美元加权美元价格冲击总和                                                           | 无                                                   |
| @@VARIABLE: waPercentPriceImpact_LR_SW@@waPercentPriceImpact_LR_SW   | Lee & Ready (1991) 股票加权百分比价格冲击总和                                                          | 无                                                   |
| @@VARIABLE: waPercentPriceImpact_LR_DW@@waPercentPriceImpact_LR_DW   | Lee & Ready (1991) 美元加权百分比价格冲击总和                                                          | 无                                                   |
| @@VARIABLE: waDollarRealizedSpread_EMO_SW@@waDollarRealizedSpread_EMO_SW| Ellis, Michaely & O'Hara (2000) 股票加权美元实现价差总和                                            | 无                                                   |
| @@VARIABLE: waDollarRealizedSpread_EMO_DW@@waDollarRealizedSpread_EMO_DW| Ellis, Michaely & O'Hara (2000) 美元加权美元实现价差总和                                            | 无                                                   |
| @@VARIABLE: waPercentRealizedSpread_EMO_SW@@waPercentRealizedSpread_EMO_SW| Ellis, Michaely & O'Hara (2000) 股票加权百分比实现价差总和                                         | 无                                                   |
| @@VARIABLE: waPercentRealizedSpread_EMO_DW@@waPercentRealizedSpread_EMO_DW| Ellis, Michaely & O'Hara (2000) 美元加权百分比实现价差总和                                         | 无                                                   |
| @@VARIABLE: waDollarPriceImpact_EMO_SW@@waDollarPriceImpact_EMO_SW    | Ellis, Michaely & O'Hara (2000) 股票加权美元价格冲击总和                                            | 无                                                   |
| @@VARIABLE: waDollarPriceImpact_EMO_DW@@waDollarPriceImpact_EMO_DW    | Ellis, Michaely & O'Hara (2000) 美元加权美元价格冲击总和                                            | 无                                                   |
| @@VARIABLE: waPercentPriceImpact_EMO_SW@@waPercentPriceImpact_EMO_SW   | Ellis, Michaely & O'Hara (2000) 股票加权百分比价格冲击总和                                          | 无                                                   |
| @@VARIABLE: waPercentPriceImpact_EMO_DW@@waPercentPriceImpact_EMO_DW   | Ellis, Michaely & O'Hara (2000) 美元加权百分比价格冲击总和                                          | 无                                                   |
| @@VARIABLE: waDollarRealizedSpread_CLNV_SW@@waDollarRealizedSpread_CLNV_SW| Chakrabarty, Li, Nguyen, & Van Ness (2006) 股票加权美元实现价差总和                                | 无                                                   |
| @@VARIABLE: waDollarRealizedSpread_CLNV_DW@@waDollarRealizedSpread_CLNV_DW| Chakrabarty, Li, Nguyen, & Van Ness (2006) 美元加权美元实现价差总和                                | 无                                                   |
| @@VARIABLE: waPercentRealizedSpread_CLNV_SW@@waPercentRealizedSpread_CLNV_SW| Chakrabarty, Li, Nguyen, & Van Ness (2006) 股票加权百分比实现价差总和                             | 无                                                   |
| @@VARIABLE: waPercentRealizedSpread_CLNV_DW@@waPercentRealizedSpread_CLNV_DW| Chakrabarty, Li, Nguyen, & Van Ness (2006) 美元加权百分比实现价差总和                             | 无                                                   |
| @@VARIABLE: waDollarPriceImpact_CLNV_SW@@waDollarPriceImpact_CLNV_SW    | Chakrabarty, Li, Nguyen, & Van Ness (2006) 股票加权美元价格冲击总和                               | 无                                                   |
| @@VARIABLE: waDollarPriceImpact_CLNV_DW@@waDollarPriceImpact_CLNV_DW    | Chakrabarty, Li, Nguyen, & Van Ness (2006) 美元加权美元价格冲击总和                               | 无                                                   |
| @@VARIABLE: waPercentPriceImpact_CLNV_SW@@waPercentPriceImpact_CLNV_SW   | Chakrabarty, Li, Nguyen, & Van Ness (2006) 股票加权百分比价格冲击总和                             | 无                                                   |
| @@VARIABLE: waPercentPriceImpact_CLNV_DW@@waPercentPriceImpact_CLNV_DW   | Chakrabarty, Li, Nguyen, & Van Ness (2006) 美元加权百分比价格冲击总和                             | 无                                                   |
| @@VARIABLE: DollarRealizedSpread_LR_SW@@DollarRealizedSpread_LR_SW | Lee & Ready (1991) 股票加权美元实现价差                                                            | waDollarRealizedSpread_LR_SW / sumsize          |
| @@VARIABLE: DollarRealizedSpread_LR_DW@@DollarRealizedSpread_LR_DW | Lee & Ready (1991) 美元加权美元实现价差                                                            | waDollarRealizedSpread_LR_DW / sumdollar        |
| @@VARIABLE: PercentRealizedSpread_LR_SW@@PercentRealizedSpread_LR_SW| Lee & Ready (1991) 股票加权百分比实现价差                                                          | waPercentRealizedSpread_LR_SW / sumsize         |
| @@VARIABLE: PercentRealizedSpread_LR_DW@@PercentRealizedSpread_LR_DW| Lee & Ready (1991) 美元加权百分比实现价差                                                          | waPercentRealizedSpread_LR_DW / sumdollar       |
| @@VARIABLE: DollarPriceImpact_LR_SW@@DollarPriceImpact_LR_SW    | Lee & Ready (1991) 股票加权美元价格冲击                                                              | waDollarPriceImpact_LR_SW / sumsize             |
| @@VARIABLE: DollarPriceImpact_LR_DW@@DollarPriceImpact_LR_DW    | Lee & Ready (1991) 美元加权美元价格冲击                                                              | waDollarPriceImpact_LR_DW / sumdollar           |
| @@VARIABLE: PercentPriceImpact_LR_SW@@PercentPriceImpact_LR_SW   | Lee & Ready (1991) 股票加权百分比价格冲击                                                           | waPercentPriceImpact_LR_SW / sumsize            |
| @@VARIABLE: PercentPriceImpact_LR_DW@@PercentPriceImpact_LR_DW   | Lee & Ready (1991) 美元加权百分比价格冲击                                                           | waPercentPriceImpact_LR_DW / sumdollar          |
| @@VARIABLE: DollarRealizedSpread_EMO_SW@@DollarRealizedSpread_EMO_SW| Ellis, Michaely & O'Hara (2000) 股票加权美元实现价差                                             | waDollarRealizedSpread_EMO_SW / sumsize         |
| @@VARIABLE: DollarRealizedSpread_EMO_DW@@DollarRealizedSpread_EMO_DW| Ellis, Michaely & O'Hara (2000) 美元加权美元实现价差                                             | waDollarRealizedSpread_EMO_DW / sumdollar        |
| @@VARIABLE: PercentRealizedSpread_EMO_SW@@PercentRealizedSpread_EMO_SW| Ellis, Michaely & O'Hara (2000) 股票加权百分比实现价差                                          | waPercentRealizedSpread_EMO_SW / sumsize        |
| @@VARIABLE: PercentRealizedSpread_EMO_DW@@PercentRealizedSpread_EMO_DW| Ellis, Michaely & O'Hara (2000) 美元加权百分比实现价差                                          | waPercentRealizedSpread_EMO_DW / sumdollar       |
| @@VARIABLE: DollarPriceImpact_EMO_SW@@DollarPriceImpact_EMO_SW    | Ellis, Michaely & O'Hara (2000) 股票加权美元价格冲击                                              | waDollarPriceImpact_EMO_SW / sumsize            |
| @@VARIABLE: DollarPriceImpact_EMO_DW@@DollarPriceImpact_EMO_DW    | Ellis, Michaely & O'Hara (2000) 美元加权美元价格冲击                                              | waDollarPriceImpact_EMO_DW / sumdollar           |
| @@VARIABLE: PercentPriceImpact_EMO_SW@@PercentPriceImpact_EMO_SW   | Ellis, Michaely & O'Hara (2000)




/* 时间限制变量的时间范围
| 变量名       | 时间范围       |
|--------------|----------------|
| date         | 20161207-20161208 |
| time_m       | 9:00:00 - 16:00:00 |
*/

@@BEGIN VARIABLE: sym_root@@
    data DailyNBBO;
@@END VARIABLE: sym_root@@

        /* Enter NBBO file names in YYYYMMDD format for the dates you want */
        set nbbo.nbbom_20161207 nbbo.nbbom_20161208;

		/* Enter company tickers you want */
        where @@BEGIN VARIABLE: sym_root@@sym_root@@END VARIABLE: sym_root@@ in ('AAPL','IBM','BRK') 

		/* This selects common stocks only */
        and @@BEGIN VARIABLE: sym_suffix@@sym_suffix@@END VARIABLE: sym_suffix@@ = ''
       
        /* Alternatively, to select dual shares, preferred shares, etc., 
		   delete the two SAS code lines above, enable the two SAS code lines 
		   below, and replace sym_root with symbol throughout the code below.

		space=' ';symbol=catx(space,sym_root,sym_suffix);format symbol $17.;
		if symbol in ('AAPL','IBM','BRK A','BRK B') */

        /* Quotes are retrieved prior to market open time to ensure that 
		   NBBO quotes are available for beginning of the day trades */
        and (("9:00:00.000000000"t) <= @@BEGIN VARIABLE: time_m@@time_m@@END VARIABLE: time_m@@ <= ("16:00:00.000000000"t));
        format @@BEGIN VARIABLE: date@@date@@END VARIABLE: date@@ date9.;
        format @@BEGIN VARIABLE: time_m@@time_m@@END VARIABLE: time_m@@ part_time trf_time TIME20.9;
    run;

    /* Retrieve Quote data */
    data DailyQuote;

        /* Enter Quote file names in YYYYMMDD format for the same dates */
        set cq.cqm_20161207 cq.cqm_20161208;

		/* Enter the same company tickers as above */
        where  sym_root in ('AAPL','IBM','BRK') 

		/* This selects common stocks only */
        and  sym_suffix = ''

        /* Alternatively, to select dual shares, preferred shares, etc., 
		   delete the two SAS code lines above, enable the two SAS code lines 
		   below, and replace sym_root with symbol throughout the code below.

		space=' ';symbol=catx(space,sym_root,sym_suffix);format symbol $17.;
		if symbol in ('AAPL','IBM','BRK A','BRK B') */

        /* Quotes are retrieved prior to market open time to ensure that 
		   NBBO quotes are available for beginning of the day trades*/
        and (("9:00:00.000000000"t) <=  time_m <= ("16:00:00.000000000"t));
        format  date date9.;
        format time_m part_time trf_time TIME20.9;
    run;

    /* Retrieve Trade data */
    data DailyTrade;

        /* Enter Trade file names in YYYYMMDD format for the same dates */
        set ct.ctm_20161207 ct.ctm_20161208;

		/* Enter the same company tickers as above */
        where  sym_root in ('AAPL','IBM','BRK') 

		/* This selects common stocks only */
        and  sym_suffix = ''

        /* Alternatively, to select dual shares, preferred shares, etc., 
		   delete the two SAS code lines above, enable the two SAS code lines 
		   below, and replace sym_root with symbol throughout the code below.

		space=' ';symbol=catx(space,sym_root,sym_suffix);format symbol $17.;
		if symbol in ('AAPL','IBM','BRK A','BRK B') */

        /* Retrieve trades during normal market hours */
        and (("9:30:00.000000000"t) <=  time_m <= ("16:00:00.000000000"t));
        @@BEGIN VARIABLE: type@@
		type='T';
		@@END VARIABLE: type@@
        format  date date9.;
        format time_m part_time trf_time TIME20.9;
    run;


	/* STEP 2: CLEAN THE DTAQ NBBO FILE */ 

data NBBO2;
    set DailyNBBO;

    /* Quote Condition must be normal (i.e., A,B,H,O,R,W) */
    if @@BEGIN VARIABLE: Qu_Cond@@Qu_Cond@@END VARIABLE: Qu_Cond@@ not in ('A','B','H','O','R','W') then delete;

	/* If canceled then delete */
    if @@BEGIN VARIABLE: Qu_Cancel@@Qu_Cancel@@END VARIABLE: Qu_Cancel@@='B' then delete;

	/* if both ask and bid are set to 0 or . then delete */
    if @@BEGIN VARIABLE: Best_Ask@@Best_Ask@@END VARIABLE: Best_Ask@@ le 0 and @@BEGIN VARIABLE: Best_Bid@@Best_Bid@@END VARIABLE: Best_Bid@@ le 0 then delete;
    if @@BEGIN VARIABLE: Best_Asksiz@@Best_Asksiz@@END VARIABLE: Best_Asksiz@@ le 0 and  @@BEGIN VARIABLE: Best_Bidsiz@@Best_Bidsiz@@END VARIABLE: Best_Bidsiz@@ le 0 then delete;
    if  Best_Ask = . and  Best_Bid = . then delete;
    if  Best_Asksiz = . and  Best_Bidsiz = . then delete;

	/* Create spread and midpoint */
	@@BEGIN VARIABLE: Spread@@
    Spread= Best_Ask- Best_Bid;
	@@END VARIABLE: Spread@@
	@@BEGIN VARIABLE: Midpoint@@
    Midpoint=( Best_Ask+ Best_Bid)/2;
	@@END VARIABLE: Midpoint@@

	/* If size/price = 0 or . then price/size is set to . */
    if  Best_Ask le 0 then do;
         Best_Ask=.;
         Best_Asksiz=.;
    end;
    if Best_Ask=. then  Best_Asksiz=.;
    if  Best_Asksiz le 0 then do;
         Best_Ask=.;
         Best_Asksiz=.;
    end;
    if  Best_Asksiz=. then  Best_Ask=.;
    if  Best_Bid le 0 then do;
         Best_Bid=.;
         Best_Bidsiz=.;
    end;
    if Best_Bid=. then  Best_Bidsiz=.;
    if  Best_Bidsiz le 0 then do;
         Best_Bid=.;
         Best_Bidsiz=.;
    end;
    if  Best_Bidsiz=. then  Best_Bid=.;

	/*	Bid/Ask size are in round lots, replace with new shares variable*/
	@@BEGIN VARIABLE: Best_BidSizeShares@@
	Best_BidSizeShares =  Best_Bidsiz * 100;
	@@END VARIABLE: Best_BidSizeShares@@
	@@BEGIN VARIABLE: Best_AskSizeShares@@
	Best_AskSizeShares =  Best_Asksiz * 100;
	@@END VARIABLE: Best_AskSizeShares@@
run;

/* STEP 3: GET PREVIOUS MIDPOINT */

proc sort 
    data=NBBO2 (drop = Best_Bidsiz Best_Asksiz);
    by  sym_root  date;
run; 

data NBBO2;
    set NBBO2;
    by  sym_root  date;
    @@BEGIN VARIABLE: lmid@@
	lmid=lag(Midpoint);
	@@END VARIABLE: lmid@@
    if first.sym_root or first.date then @@BEGIN VARIABLE: lmid@@lmid@@END VARIABLE: lmid@@=.;
    @@BEGIN VARIABLE: lm25@@
	lm25=lmid-2.5;
	@@END VARIABLE: lm25@@
	@@BEGIN VARIABLE: lp25@@
    lp25=lmid+2.5;
	@@END VARIABLE: lp25@@
run;

/* If the quoted spread is greater than $5.00 and the bid (ask) price is less
   (greater) than the previous midpoint - $2.50 (previous midpoint + $2.50), 
   then the bid (ask) is not considered. */

data NBBO2;
    set NBBO2;
    if  Spread gt 5 and  Best_Bid lt  lm25 then do;
         Best_Bid=.;
		 Best_BidSizeShares=.;
    end;
    if  Spread gt 5 and  Best_Ask gt  lp25 then do;
         Best_Ask=.;
         Best_AskSizeShares=.;
    end;
	keep  date  time_m  sym_root Best_Bidex  Best_Bid  Best_BidSizeShares 
         Best_Askex  Best_Ask  Best_AskSizeShares  Qu_SeqNum;
run;

/* STEP 4: OUTPUT NEW NBBO RECORDS - IDENTIFY CHANGES IN NBBO RECORDS 
   (CHANGES IN PRICE AND/OR DEPTH) */

data NBBO2;
    set NBBO2;
    if sym_root ne lag( sym_root) 
       or  date ne lag( date) 
       or  Best_Ask ne lag( Best_Ask) 
       or  Best_Bid ne lag( Best_Bid) 
       or  Best_AskSizeShares ne lag( Best_AskSizeShares) 
       or  Best_BidSizeShares ne lag( Best_BidSizeShares); 
run;

/* STEP 5: CLEAN DTAQ QUOTES DATA */

data quoteAB;
    set DailyQuote;

    /* Create spread and midpoint*/;
	@@BEGIN VARIABLE: Spread@@
        @@BEGIN VARIABLE: Ask@@
	@@BEGIN VARIABLE: Bid@@
    Spread= Ask-Bid;
	@@END VARIABLE: Spread@@
	@@END VARIABLE: Ask@@
	@@END VARIABLE: Bid@@



	/* Delete if abnormal quote conditions */
    if @@BEGIN VARIABLE: Qu_Cond@@Qu_Cond@@END VARIABLE: Qu_Cond@@ not in ('A','B','H','O','R','W')then delete; 

	/* Delete if abnormal crossed markets */
    if  Bid> Ask then delete;

	/* Delete abnormal spreads*/
    if Spread>5 then delete;

	/* Delete withdrawn Quotes. This is 
	   when an exchange temporarily has no quote, as indicated by quotes 
	   with price or depth fields containing values less than or equal to 0 
	   or equal to '.'. See discussion in Holden and Jacobsen (2014), 
	   page 11. */
    if  Ask le 0 or  Ask =. then delete;
	@@BEGIN VARIABLE: Asksiz@@
    if  Asksiz le 0 or  Asksiz =. then delete;
	@@END VARIABLE: Asksiz@@
    if  Bid le 0 or  Bid =. then delete;
	@@BEGIN VARIABLE: Bidsiz@@
    if  Bidsiz le 0 or  Bidsiz =. then delete;
	@@END VARIABLE: Bidsiz@@
	drop Sym_Suffix Bidex Askex  Qu_Cancel RPI SSR LULD_BBO_CQS 
         LULD_BBO_UTP FINRA_ADF_MPID SIP_Message_ID Part_Time RRN TRF_Time 
          Spread NATL_BBO_LULD;
run;

/* STEP 6: CLEAN DAILY TRADES DATA - DELETE ABNORMAL TRADES */

data trade2;
    set DailyTrade;
    where @@BEGIN VARIABLE: Tr_Corr@@Tr_Corr@@END VARIABLE: Tr_Corr@@ eq '00' and @@BEGIN VARIABLE: price@@price@@END VARIABLE: price@@ gt 0;
	drop  Tr_Corr Tr_Source TR_RF Part_Time RRN TRF_Time Sym_Suffix Tr_SCond 
         Tr_StopInd;
run;

/* STEP 7: THE NBBO FILE IS INCOMPLETE BY ITSELF (IF A SINGLE EXCHANGE 
   HAS THE BEST BID AND OFFER, THE QUOTE IS INCLUDED IN THE QUOTES FILE, BUT 
   NOT THE NBBO FILE). TO CREATE THE COMPLETE OFFICIAL NBBO, WE NEED TO 
   MERGE WITH THE QUOTES FILE (SEE FOOTNOTE 6 AND 24 IN OUR PAPER) */

data quoteAB2 (rename=(Ask=Best_Ask Bid=Best_Bid));
    set quoteAB;
    where (@@BEGIN VARIABLE: Qu_Source@@Qu_Source@@END VARIABLE: Qu_Source@@ = "C" and  NatBBO_Ind='1') 
  @@BEGIN VARIABLE: NatBBO_Ind@@   @@END VARIABLE: NatBBO_Ind@@

       or (@@BEGIN VARIABLE: Qu_Source@@Qu_Source@@END VARIABLE: Qu_Source@@ = "N" and NatBBO_Ind='4');
    keep  date  time_m  sym_root  Qu_SeqNum  Bid  Best_BidSizeShares  Ask 
	@@BEGIN VARIABLE: Qu_SeqNum@@	@@END VARIABLE: Qu_SeqNum@@
          Best_AskSizeShares;

	/*	Bid/Ask size are in round lots, replace with new shares variable
	and rename Best_BidSizeShares and Best_AskSizeShares*/
	
	Best_BidSizeShares = Bidsiz * 100;
	
	Best_AskSizeShares = Asksiz * 100;
run;

proc sort data=NBBO2;
    by  sym_root  date  Qu_SeqNum;
run;

proc sort data=quoteAB2;
    by  sym_root  date  Qu_SeqNum;
run;

data OfficialCompleteNBBO (drop=Best_Askex Best_Bidex);
    set NBBO2 quoteAB2;
    by  sym_root  date  Qu_SeqNum;
run;

/* If the NBBO Contains two quotes in the exact same microseond, assume 
   last quotes (based on sequence number) is active one */
proc sort data=OfficialCompleteNBBO;
    by  sym_root  date  time_m descending  Qu_SeqNum;
run;

proc sort data=OfficialCompleteNBBO nodupkey;
    by  sym_root  date  time_m;
run;

/* STEP 8: INTERLEAVE TRADES WITH NBBO QUOTES. DTAQ TRADES AT NANOSECOND 
   TMMMMMMMMM ARE MATCHED WITH THE DTAQ NBBO QUOTES STILL IN FORCE AT THE 
   NANOSECOND TMMMMMMMM(M-1) */;

data OfficialCompleteNBBO;
    set OfficialCompleteNBBO;
    type='Q';
    time_m=time_m+.000000001;
	drop  Qu_SeqNum;
run;

proc sort data=OfficialCompleteNBBO;
    by  sym_root  date  time_m;
run;

proc sort data=trade2;
@@BEGIN VARIABLE: Tr_SeqNum@@	@@END VARIABLE: Tr_SeqNum@@
    by  sym_root  date  time_m  Tr_SeqNum;
run;

data TradesandCorrespondingNBBO;
    set OfficialCompleteNBBO trade2;
    by  sym_root  date  time_m  type;
run;

data TradesandCorrespondingNBBO 
    (drop=Best_Ask Best_Bid Best_AskSizeShares Best_BidSizeShares);
    set TradesandCorrespondingNBBO;
    by  sym_root  date;
	retain @@BEGIN VARIABLE: QTime@@QTime@@END VARIABLE: QTime@@ @@BEGIN VARIABLE: NBO@@NBO@@END VARIABLE: NBO@@ @@BEGIN VARIABLE: NBB@@NBB@@END VARIABLE: NBB@@ @@BEGIN VARIABLE: NBOqty@@NBOqty@@END VARIABLE: NBOqty@@ @@BEGIN VARIABLE: NBBqty@@NBBqty@@END VARIABLE: NBBqty@@;
    if first. sym_root or first. date and type='T' then do;
		@@BEGIN VARIABLE: QTime@@QTime@@END VARIABLE: QTime@@=.;
        @@BEGIN VARIABLE: NBO@@NBO@@END VARIABLE: NBO@@=.;
        @@BEGIN VARIABLE: NBB@@NBB@@END VARIABLE: NBB@@=.;
        @@BEGIN VARIABLE: NBOqty@@NBOqty@@END VARIABLE: NBOqty@@=.;
        @@BEGIN VARIABLE: NBBqty@@NBBqty@@END VARIABLE: NBBqty@@=.;
    end;
    if type='Q' then @@BEGIN VARIABLE: QTime@@QTime@@END VARIABLE: QTime@@=time_m;
        else @@BEGIN VARIABLE: QTime@@QTime@@END VARIABLE: QTime@@=@@BEGIN VARIABLE: QTime@@QTime@@END VARIABLE: QTime@@;
    if type='Q' then @@BEGIN VARIABLE: NBO@@NBO@@END VARIABLE: NBO@@=Best_Ask;
        else @@BEGIN VARIABLE: NBO@@NBO@@END VARIABLE: NBO@@=@@BEGIN VARIABLE: NBO@@NBO@@END VARIABLE: NBO@@;
    if type='Q' then @@BEGIN VARIABLE: NBB@@NBB@@END VARIABLE: NBB@@=Best_Bid;
        else @@BEGIN VARIABLE: NBB@@NBB@@END VARIABLE: NBB@@=@@BEGIN VARIABLE: NBB@@NBB@@END VARIABLE: NBB@@;
    if type='Q' then @@BEGIN VARIABLE: NBOqty@@NBOqty@@END VARIABLE: NBOqty@@=Best_AskSizeShares;
        else @@BEGIN VARIABLE: NBOqty@@NBOqty@@END VARIABLE: NBOqty@@=@@BEGIN VARIABLE: NBOqty@@NBOqty@@END VARIABLE: NBOqty@@;
    if type='Q' then @@BEGIN VARIABLE: NBBqty@@NBBqty@@END VARIABLE: NBBqty@@=Best_BidSizeShares;
        else @@BEGIN VARIABLE: NBBqty@@NBBqty@@END VARIABLE: NBBqty@@=@@BEGIN VARIABLE: NBBqty@@NBBqty@@END VARIABLE: NBBqty@@;
	format @@BEGIN VARIABLE: QTime@@QTime@@END VARIABLE: QTime@@ TIME20.9;
run;

/* STEP 9: CLASSIFY TRADES AS "BUYS" OR "SELLS" USING THREE CONVENTIONS:
   LR = LEE AND READY (1991), EMO = ELLIS, MICHAELY, AND O'HARA (2000)
   AND CLNV = CHAKRABARTY, LI, NGUYEN, AND VAN NESS (2006); DETERMINE NBBO 
   MIDPOINT AND LOCKED AND CROSSED NBBOs */

data BuySellIndicators;
    set TradesandCorrespondingNBBO;
    where type='T';
	@@BEGIN VARIABLE: midpoint@@
    midpoint=( NBO+ NBB)/2;
	@@END VARIABLE: midpoint@@
    if @@BEGIN VARIABLE: NBO@@NBO@@END VARIABLE: NBO@@=@@BEGIN VARIABLE: NBB@@NBB@@END VARIABLE: NBB@@ then @@BEGIN VARIABLE: lock@@lock@@END VARIABLE: lock@@=1;else @@BEGIN VARIABLE: lock@@lock@@END VARIABLE: lock@@=0;
    if  NBO< NBB then @@BEGIN VARIABLE: cross@@cross@@END VARIABLE: cross@@=1;else @@BEGIN VARIABLE: cross@@cross@@END VARIABLE: cross@@=0;
run;

/* Determine Whether Trade Price is Higher or Lower than Previous Trade 
   Price, or "Trade Direction" */
data BuySellIndicators;
    set BuySellIndicators;
    by  sym_root  date;
	retain @@BEGIN VARIABLE: direction2@@direction2@@END VARIABLE: direction2@@;
	@@BEGIN VARIABLE: direction2@@
    direction=dif( price);
	@@END VARIABLE: direction2@@
    if first. sym_root or first. date then @@BEGIN VARIABLE: direction2@@direction2@@END VARIABLE: direction2@@=.;
    if @@BEGIN VARIABLE: direction2@@direction2@@END VARIABLE: direction2@@ ne 0 then @@BEGIN VARIABLE: direction2@@direction2@@END VARIABLE: direction2@@=@@BEGIN VARIABLE: direction2@@direction2@@END VARIABLE: direction2@@; 
    else @@BEGIN VARIABLE: direction2@@direction2@@END VARIABLE: direction2@@=@@BEGIN VARIABLE: direction2@@direction2@@END VARIABLE: direction2@@;
	drop direction;
run;

/* First Classification Step: Classify Trades Using Tick Test */
data BuySellIndicators;
    set BuySellIndicators;
    if  direction2>0 then @@BEGIN VARIABLE: BuySellLR@@BuySellLR@@END VARIABLE: BuySellLR@@=1;
    if  direction2<0 then @@BEGIN VARIABLE: BuySellLR@@BuySellLR@@END VARIABLE: BuySellLR@@=-1;
    if  direction2=. then @@BEGIN VARIABLE: BuySellLR@@BuySellLR@@END VARIABLE: BuySellLR@@=.;
    if  direction2>0 then @@BEGIN VARIABLE: BuySellEMO@@BuySellEMO@@END VARIABLE: BuySellEMO@@=1;
    if  direction2<0 then @@BEGIN VARIABLE: BuySellEMO@@BuySellEMO@@END VARIABLE: BuySellEMO@@=-1;
    if  direction2=. then @@BEGIN VARIABLE: BuySellEMO@@BuySellEMO@@END VARIABLE: BuySellEMO@@=.;
    if  direction2>0 then @@BEGIN VARIABLE: BuySellCLNV@@BuySellCLNV@@END VARIABLE: BuySellCLNV@@=1;
    if  direction2<0 then @@BEGIN VARIABLE: BuySellCLNV@@BuySellCLNV@@END VARIABLE: BuySellCLNV@@=-1;
    if  direction2=. then @@BEGIN VARIABLE: BuySellCLNV@@BuySellCLNV@@END VARIABLE: BuySellCLNV@@=.;
run;

/* Second Classification Step: Update Trade Classification When 
   Conditions are Met as Specified by LR, EMO, and CLNV */
data BuySellIndicators;
    set BuySellIndicators;
    if  lock=0 and  cross=0 and  price gt  midpoint then @@BEGIN VARIABLE: BuySellLR@@BuySellLR@@END VARIABLE: BuySellLR@@=1;
    if  lock=0 and  cross=0 and  price lt  midpoint then @@BEGIN VARIABLE: BuySellLR@@BuySellLR@@END VARIABLE: BuySellLR@@=-1;
    if  lock=0 and  cross=0 and  price= NBO then @@BEGIN VARIABLE: BuySellEMO@@BuySellEMO@@END VARIABLE: BuySellEMO@@=1;
    if  lock=0 and  cross=0 and  price= NBB then @@BEGIN VARIABLE: BuySellEMO@@BuySellEMO@@END VARIABLE: BuySellEMO@@=-1;
    ofr30= NBO-.3*( NBO- NBB);
    bid30= NBB+.3*( NBO- NBB);
    if  lock=0 and  cross=0 and  price le  NBO and  price ge ofr30
        then @@BEGIN VARIABLE: BuySellCLNV@@BuySellCLNV@@END VARIABLE: BuySellCLNV@@=1;
    if  lock=0 and  cross=0 and  price le bid30 and  price ge  NBB 
        then @@BEGIN VARIABLE: BuySellCLNV@@BuySellCLNV@@END VARIABLE: BuySellCLNV@@=-1;
run;

/* STEP 10: CALCULATE QUOTED SRPEADS AND DEPTHS */

/* Use Quotes During Normal Market Hours */
data QSpread1;
    set OfficialCompleteNBBO;
    if  time_m lt ("9:30:00.000000000"t) then delete;
run;

/* Determine Time Each Quote is In Force - If Last Quote of Day, then Quote
   is Inforce Until 4:00 pm */

proc sort data=QSpread1;
    by  sym_root  date descending time_m;
run;

data QSpread1;
    set QSpread1;
    by  sym_root  date;
    @@BEGIN VARIABLE: inforce@@
	inforce=abs(dif(time_m));
	@@END VARIABLE: inforce@@
	if first. sym_root or first. date 
    then @@BEGIN VARIABLE: inforce@@inforce@@END VARIABLE: inforce@@=max(("16:00:00.000000000"t-time_m),0);
	@@BEGIN VARIABLE: midpoint@@
	midpoint=(Best_Ask+Best_Bid)/2;
	@@END VARIABLE: midpoint@@
run;

proc sort data=QSpread1;
    by  sym_root  date time_m;
run;

data QSpread2;
    set QSpread1;
/* Delete Locked and Crossed Quotes */
    if  Best_Ask= Best_Bid or  Best_Ask< Best_Bid then delete;
/* Multiply Dollar Quoted Spread, Percent Quoted Spread, Best Dollar 
   Depth, and Best Share Depth by Time Inforce */
   @@BEGIN VARIABLE: wQuotedSpread_Dollar@@
    wQuotedSpread_Dollar=(Best_Ask-Best_Bid)* inforce;
	@@END VARIABLE: wQuotedSpread_Dollar@@
	@@BEGIN VARIABLE: wQuotedSpread_Percent@@
    wQuotedSpread_Percent=(log(Best_Ask)-log(Best_Bid))* inforce;
	@@END VARIABLE: wQuotedSpread_Percent@@
	@@BEGIN VARIABLE: wBestOfrDepth_Dollar@@
    wBestOfrDepth_Dollar= Best_Ask*Best_AskSizeShares* inforce;
	@@END VARIABLE: wBestOfrDepth_Dollar@@
	@@BEGIN VARIABLE: wBestBidDepth_Dollar@@
    wBestBidDepth_Dollar= Best_Bid*Best_BidSizeShares* inforce;
	@@END VARIABLE: wBestBidDepth_Dollar@@
	@@BEGIN VARIABLE: wBestOfrDepth_Share@@
    wBestOfrDepth_Share=Best_AskSizeShares* inforce;
	@@END VARIABLE: wBestOfrDepth_Share@@
	@@BEGIN VARIABLE: wBestBidDepth_Share@@
    wBestBidDepth_Share=Best_BidSizeShares* inforce;
	@@END VARIABLE: wBestBidDepth_Share@@
run;

/* Find Average Across Firm-Day */
proc sql;
    create table QuotedSpreadsandDepths 
    as select sym_root,date,
    sum(inforce) as @@BEGIN VARIABLE: sumtime@@sumtime@@END VARIABLE: sumtime@@,
    sum(wQuotedSpread_Dollar) as @@BEGIN VARIABLE: swQuotedSpread_Dollar@@swQuotedSpread_Dollar@@END VARIABLE: swQuotedSpread_Dollar@@,
    sum(wQuotedSpread_Percent) as @@BEGIN VARIABLE: swQuotedSpread_Percent@@swQuotedSpread_Percent@@END VARIABLE: swQuotedSpread_Percent@@,
    sum(wBestOfrDepth_Dollar) as @@BEGIN VARIABLE: swBestOfrDepth_Dollar@@swBestOfrDepth_Dollar@@END VARIABLE: swBestOfrDepth_Dollar@@,
    sum(wBestBidDepth_Dollar) as @@BEGIN VARIABLE: swBestBidDepth_Dollar@@swBestBidDepth_Dollar@@END VARIABLE: swBestBidDepth_Dollar@@,
    sum(wBestOfrDepth_Share) as @@BEGIN VARIABLE: swBestOfrDepth_Share@@swBestOfrDepth_Share@@END VARIABLE: swBestOfrDepth_Share@@,
    sum(wBestBidDepth_Share) as @@BEGIN VARIABLE: swBestBidDepth_Share@@swBestBidDepth_Share@@END VARIABLE: swBestBidDepth_Share@@
    from QSpread2 
    group by sym_root,date 
    order by sym_root,date;
quit;

/* Calculate Time-Weighted Dollar Quoted Spread, Percent Quoted Spread, 
   Best Dollar Depth, and Best Share Depth */
data QuotedSpreadsandDepths;
    set QuotedSpreadsandDepths;
	@@BEGIN VARIABLE: QuotedSpread_Dollar@@
    QuotedSpread_Dollar=swQuotedSpread_Dollar/sumtime;
	@@END VARIABLE: QuotedSpread_Dollar@@
	@@BEGIN VARIABLE: QuotedSpread_Percent@@
    QuotedSpread_Percent=swQuotedSpread_Percent/sumtime;
	@@END VARIABLE: QuotedSpread_Percent@@
	@@BEGIN VARIABLE: BestOfrDepth_Dollar@@
    BestOfrDepth_Dollar=swBestOfrDepth_Dollar/sumtime;
	@@END VARIABLE: BestOfrDepth_Dollar@@
	@@BEGIN VARIABLE: BestBidDepth_Dollar@@
    BestBidDepth_Dollar=swBestBidDepth_Dollar/sumtime;
	@@END VARIABLE: BestBidDepth_Dollar@@
	@@BEGIN VARIABLE: BestOfrDepth_Share@@
    BestOfrDepth_Share=swBestOfrDepth_Share/sumtime;
	@@END VARIABLE: BestOfrDepth_Share@@
	@@BEGIN VARIABLE: BestBidDepth_Share@@
    BestBidDepth_Share=swBestBidDepth_Share/sumtime;
	@@END VARIABLE: BestBidDepth_Share@@
	drop swQuotedSpread_Dollar swQuotedSpread_Percent 
         swBestOfrDepth_Dollar swBestBidDepth_Dollar
         swBestOfrDepth_Share swBestBidDepth_Share;
run;

/* STEP 11: CALCULATE EFFECTIVE SPREADS; AGGREGATE BASED ON 3 CONVENTIONS:
   Ave = SIMPLE AVERAGE, DW = DOLLAR-WEIGHTED, SW = SHARE-WEIGHTED */
data BuySellIndicators;
    set BuySellIndicators;
	@@BEGIN VARIABLE: wEffectiveSpread_Dollar@@
    wEffectiveSpread_Dollar=(abs( price- midpoint))*2;
	@@END VARIABLE: wEffectiveSpread_Dollar@@
	@@BEGIN VARIABLE: wEffectiveSpread_Percent@@
    wEffectiveSpread_Percent=abs(log( price)-log( midpoint))*2;
	@@END VARIABLE: wEffectiveSpread_Percent@@
	@@BEGIN VARIABLE: dollar@@
	@@BEGIN VARIABLE: size@@
    dollar= price* size;
	@@END VARIABLE: dollar@@
	@@END VARIABLE: size@@
	@@BEGIN VARIABLE: wEffectiveSpread_Dollar_DW@@
    wEffectiveSpread_Dollar_DW=wEffectiveSpread_Dollar*dollar;
	@@END VARIABLE: wEffectiveSpread_Dollar_DW@@
	@@BEGIN VARIABLE: wEffectiveSpread_Dollar_SW@@
    wEffectiveSpread_Dollar_SW=wEffectiveSpread_Dollar* size;
	@@END VARIABLE: wEffectiveSpread_Dollar_SW@@
	@@BEGIN VARIABLE: wEffectiveSpread_Percent_DW@@
    wEffectiveSpread_Percent_DW=wEffectiveSpread_Percent*dollar;
	@@END VARIABLE: wEffectiveSpread_Percent_DW@@
	@@BEGIN VARIABLE: wEffectiveSpread_Percent_SW@@
    wEffectiveSpread_Percent_SW=wEffectiveSpread_Percent* size;
	@@END VARIABLE: wEffectiveSpread_Percent_SW@@
run;

/* Delete Trades Associated with Locked or Crossed Best Bids or Best 
   Offers */
data TSpread2;
    set BuySellIndicators;
    if  lock=1 or  cross=1 then delete;
run;

/* Find average across firm-day */
proc sql;
    create table EffectiveSpreads 
    as select sym_root,date,
    sum(dollar) as @@BEGIN VARIABLE: sumdollar@@sumdollar@@END VARIABLE: sumdollar@@,
    sum(size) as @@BEGIN VARIABLE: sumsize@@sumsize@@END VARIABLE: sumsize@@,
    mean(wEffectiveSpread_Dollar) as @@BEGIN VARIABLE: EffectiveSpread_Dollar_Ave@@EffectiveSpread_Dollar_Ave@@END VARIABLE: EffectiveSpread_Dollar_Ave@@,
    mean(wEffectiveSpread_Percent) as @@BEGIN VARIABLE: EffectiveSpread_Percent_Ave@@EffectiveSpread_Percent_Ave@@END VARIABLE: EffectiveSpread_Percent_Ave@@,
    sum(wEffectiveSpread_Dollar_DW) as @@BEGIN VARIABLE: waEffectiveSpread_Dollar_DW@@waEffectiveSpread_Dollar_DW@@END VARIABLE: waEffectiveSpread_Dollar_DW@@,
    sum(wEffectiveSpread_Dollar_SW) as @@BEGIN VARIABLE: waEffectiveSpread_Dollar_SW@@waEffectiveSpread_Dollar_SW@@END VARIABLE: waEffectiveSpread_Dollar_SW@@,
    sum(wEffectiveSpread_Percent_DW) as @@BEGIN VARIABLE: waEffectiveSpread_Percent_DW@@waEffectiveSpread_Percent_DW@@END VARIABLE: waEffectiveSpread_Percent_DW@@,
    sum(wEffectiveSpread_Percent_SW) as @@BEGIN VARIABLE: waEffectiveSpread_Percent_SW@@waEffectiveSpread_Percent_SW@@END VARIABLE: waEffectiveSpread_Percent_SW@@
    from TSpread2 
    group by sym_root,date 
    order by sym_root,date;
quit;

/* Calculate Dollar-Weighted (DW) and Share-Weighted (SW) Dollar Effective 
   Spreads and Percent Effective Spreads */
data EffectiveSpreads;
    set EffectiveSpreads;
	@@BEGIN VARIABLE: EffectiveSpread_Dollar_DW@@
    EffectiveSpread_Dollar_DW=waEffectiveSpread_Dollar_DW/sumdollar;
	@@END VARIABLE: EffectiveSpread_Dollar_DW@@
	@@BEGIN VARIABLE: EffectiveSpread_Dollar_SW@@
    EffectiveSpread_Dollar_SW=waEffectiveSpread_Dollar_SW/sumsize;
	@@END VARIABLE: EffectiveSpread_Dollar_SW@@
	@@BEGIN VARIABLE: EffectiveSpread_Percent_DW@@
    EffectiveSpread_Percent_DW=waEffectiveSpread_Percent_DW/sumdollar;
	@@END VARIABLE: EffectiveSpread_Percent_DW@@
	@@BEGIN VARIABLE: EffectiveSpread_Percent_SW@@
    EffectiveSpread_Percent_SW=waEffectiveSpread_Percent_SW/sumsize;
	@@END VARIABLE: EffectiveSpread_Percent_SW@@
	drop waEffectiveSpread_Dollar_DW waEffectiveSpread_Dollar_SW
         waEffectiveSpread_Percent_DW waEffectiveSpread_Percent_SW;
run;
/* STEP 12: CALCULATE REALIZED SPREADS AND PRICE IMPACTS BASED ON THREE:
   CONVENTIONS: LR = LEE AND READY (1991), EMO = ELLIS, MICHAELY, AND O'HARA 
   (2000) AND CLNV = CHAKRABARTY, LI, NGUYEN, AND VAN NESS (2006);  
   FIND THE NBBO MIDPOINT 5 MINUTES SUBSEQUENT TO THE TRADE */

/* Redefine the time variable as 5 minutes earlier (e.g., quotes at 
   10:00:00 are redefined as occurring at 9:55:00 in order to match to 
   trades occurring at 9:55:00. This way we match trades occurring at time T
   to NBBO quotes outstanding at T+5). */
data MidQ (keep=sym_root date type midpointnew time_m BEST_ASKnew 
    BEST_BIDnew);
    set QSpread1;
    midpointnew=midpoint;
    time_m=time_m-300;
    Best_AskNew=Best_Ask;
    Best_BidNew=Best_Bid;
run;

data MidT (keep=sym_root date time_M type midpoint price @@BEGIN VARIABLE: BuySellLR@@BuySellLR@@END VARIABLE: BuySellLR@@ 
        @@BEGIN VARIABLE: BuySellEMO@@BuySellEMO@@END VARIABLE: BuySellEMO@@ @@BEGIN VARIABLE: BuySellCLNV@@BuySellCLNV@@END VARIABLE: BuySellCLNV@@  wEffectiveSpread_Dollar size dollar);
    set BuySellIndicators;
run;

proc sort data=MidQ;
    by sym_root date Time_M type;
run;

proc sort data=MidT;
    by sym_root date Time_M type;
run;

/* Stack Trades at Time T with NBBO Quotes at Time T+5 */
data Mid1;
    set MidT MidQ;
    by sym_root date Time_M type;
run;

/* For Each Trade at Time T, Identify the Outstanding NBBO at Time T+5 */
data Mid1;
    set Mid1;
    by sym_root date;
    retain  @@BEGIN VARIABLE: midpoint5@@midpoint5@@END VARIABLE: midpoint5@@ @@BEGIN VARIABLE: Best_Ask5@@Best_Ask5@@END VARIABLE: Best_Ask5@@ @@BEGIN VARIABLE: Best_Bid5@@Best_Bid5@@END VARIABLE: Best_Bid5@@;
    if type='Q' then  midpoint5=midpointnew;
    else  midpoint5= midpoint5;
    if type='Q' then @@BEGIN VARIABLE: Best_Ask5@@Best_Ask5@@END VARIABLE: Best_Ask5@@=Best_AskNew;else  Best_Ask5= Best_Ask5;
    if type='Q' then @@BEGIN VARIABLE: Best_Bid5@@Best_Bid5@@END VARIABLE: Best_Bid5@@=Best_BidNew;else  Best_Bid5= Best_Bid5;
	drop midpointnew Best_AskNew Best_BidNew;
run;

/* Delete Trades at T Associated with Locked or Crossed Best Bids or Best 
   Offers at T+5 */
data Mid1;
    set Mid1;
    if  Best_Ask5= Best_Bid5 or  Best_Ask5< Best_Bid5 then delete;
run;

/* Compute Dollar and Percent Realized Spread and Price Impact for LR, EMO,
   and CLNV*/
data Mid1; 
    set Mid1; 
    where type='T';

    /* Compute Dollar and Percent Realized Spread for LR, EMO, and CLNV */
	@@BEGIN VARIABLE: wDollarRealizedSpread_LR@@
    wDollarRealizedSpread_LR= BuySellLR*( price- midpoint5)*2;
	@@END VARIABLE: wDollarRealizedSpread_LR@@
	@@BEGIN VARIABLE: wDollarRealizedSpread_EMO@@
    wDollarRealizedSpread_EMO= BuySellEMO*( price- midpoint5)*2;
	@@END VARIABLE: wDollarRealizedSpread_EMO@@
	@@BEGIN VARIABLE: wDollarRealizedSpread_CLNV@@
    wDollarRealizedSpread_CLNV= BuySellCLNV*( price- midpoint5)*2;
	@@END VARIABLE: wDollarRealizedSpread_CLNV@@
	@@BEGIN VARIABLE: wPercentRealizedSpread_LR@@
    wPercentRealizedSpread_LR= BuySellLR*(log( price)-log( midpoint5))*2;
	@@END VARIABLE: wPercentRealizedSpread_LR@@
	@@BEGIN VARIABLE: wPercentRealizedSpread_EMO@@
    wPercentRealizedSpread_EMO= BuySellEMO*(log( price)-log( midpoint5))*2;
	@@END VARIABLE: wPercentRealizedSpread_EMO@@
	@@BEGIN VARIABLE: wPercentRealizedSpread_CLNV@@
    wPercentRealizedSpread_CLNV= BuySellCLNV*(log( price)-log( midpoint5))*2;
	@@END VARIABLE: wPercentRealizedSpread_CLNV@@

    /* Compute Dollar and Percent Price Impact for LR, EMO, and CLNV */
	@@BEGIN VARIABLE: wDollarPriceImpact_LR@@
    wDollarPriceImpact_LR= BuySellLR*( midpoint5- midpoint)*2;
	@@END VARIABLE: wDollarPriceImpact_LR@@
	@@BEGIN VARIABLE: wDollarPriceImpact_EMO@@
    wDollarPriceImpact_EMO= BuySellEMO*( midpoint5- midpoint)*2;
	@@END VARIABLE: wDollarPriceImpact_EMO@@
	@@BEGIN VARIABLE: wDollarPriceImpact_CLNV@@
    wDollarPriceImpact_CLNV= BuySellCLNV*( midpoint5- midpoint)*2;
	@@END VARIABLE: wDollarPriceImpact_CLNV@@
	@@BEGIN VARIABLE: wPercentPriceImpact_LR@@
    wPercentPriceImpact_LR= BuySellLR*(log( midpoint5)-log( midpoint))*2;
	@@END VARIABLE: wPercentPriceImpact_LR@@
	@@BEGIN VARIABLE: wPercentPriceImpact_EMO@@
    wPercentPriceImpact_EMO= BuySellEMO*(log( midpoint5)-log( midpoint))*2;
	@@END VARIABLE: wPercentPriceImpact_EMO@@
	@@BEGIN VARIABLE: wPercentPriceImpact_CLNV@@
    wPercentPriceImpact_CLNV= BuySellCLNV*(log( midpoint5)-log( midpoint))*2;
	@@END VARIABLE: wPercentPriceImpact_CLNV@@

    /* Multiply Realized Spreads and Price Impact by Dollar and Share Size
	   of Trade for LR, EMO, and CLNV */
	@@BEGIN VARIABLE: wDollarRealizedSpread_LR_SW@@
    wDollarRealizedSpread_LR_SW=wDollarRealizedSpread_LR* size;
	@@END VARIABLE: wDollarRealizedSpread_LR_SW@@
	@@BEGIN VARIABLE: wDollarRealizedSpread_LR_DW@@
    wDollarRealizedSpread_LR_DW=wDollarRealizedSpread_LR*dollar;
	@@END VARIABLE: wDollarRealizedSpread_LR_DW@@
	@@BEGIN VARIABLE: wPercentRealizedSpread_LR_SW@@
    wPercentRealizedSpread_LR_SW=wPercentRealizedSpread_LR* size;
	@@END VARIABLE: wPercentRealizedSpread_LR_SW@@
	@@BEGIN VARIABLE: wPercentRealizedSpread_LR_DW@@
    wPercentRealizedSpread_LR_DW=wPercentRealizedSpread_LR*dollar;
	@@END VARIABLE: wPercentRealizedSpread_LR_DW@@
	@@BEGIN VARIABLE: wDollarPriceImpact_LR_SW@@
    wDollarPriceImpact_LR_SW=wDollarPriceImpact_LR* size;
	@@END VARIABLE: wDollarPriceImpact_LR_SW@@
	@@BEGIN VARIABLE: wDollarPriceImpact_LR_DW@@
    wDollarPriceImpact_LR_DW=wDollarPriceImpact_LR*dollar;
	@@END VARIABLE: wDollarPriceImpact_LR_DW@@
	@@BEGIN VARIABLE: wPercentPriceImpact_LR_SW@@
    wPercentPriceImpact_LR_SW=wPercentPriceImpact_LR* size;
	@@END VARIABLE: wPercentPriceImpact_LR_SW@@
	@@BEGIN VARIABLE: wPercentPriceImpact_LR_DW@@
    wPercentPriceImpact_LR_DW=wPercentPriceImpact_LR*dollar;
	@@END VARIABLE: wPercentPriceImpact_LR_DW@@
	@@BEGIN VARIABLE: wDollarRealizedSpread_EMO_SW@@
    wDollarRealizedSpread_EMO_SW=wDollarRealizedSpread_EMO* size;
	@@END VARIABLE: wDollarRealizedSpread_EMO_SW@@
	@@BEGIN VARIABLE: wDollarRealizedSpread_EMO_DW@@
    wDollarRealizedSpread_EMO_DW=wDollarRealizedSpread_EMO*dollar;
	@@END VARIABLE: wDollarRealizedSpread_EMO_DW@@
	@@BEGIN VARIABLE: wPercentRealizedSpread_EMO_SW@@
    wPercentRealizedSpread_EMO_SW=wPercentRealizedSpread_EMO* size;
	@@END VARIABLE: wPercentRealizedSpread_EMO_SW@@
	@@BEGIN VARIABLE: wPercentRealizedSpread_EMO_DW@@
    wPercentRealizedSpread_EMO_DW=wPercentRealizedSpread_EMO*dollar;
	@@END VARIABLE: wPercentRealizedSpread_EMO_DW@@
	@@BEGIN VARIABLE: wDollarPriceImpact_EMO_SW@@
    wDollarPriceImpact_EMO_SW=wDollarPriceImpact_EMO* size;
	@@END VARIABLE: wDollarPriceImpact_EMO_SW@@
	@@BEGIN VARIABLE: wDollarPriceImpact_EMO_DW@@
    wDollarPriceImpact_EMO_DW=wDollarPriceImpact_EMO*dollar;
	@@END VARIABLE: wDollarPriceImpact_EMO_DW@@
	@@BEGIN VARIABLE: wPercentPriceImpact_EMO_SW@@
    wPercentPriceImpact_EMO_SW=wPercentPriceImpact_EMO* size;
	@@END VARIABLE: wPercentPriceImpact_EMO_SW@@
	@@BEGIN VARIABLE: wPercentPriceImpact_EMO_DW@@
    wPercentPriceImpact_EMO_DW=wPercentPriceImpact_EMO*dollar;
	@@END VARIABLE: wPercentPriceImpact_EMO_DW@@
	@@BEGIN VARIABLE: wDollarRealizedSpread_CLNV_SW@@
    wDollarRealizedSpread_CLNV_SW=wDollarRealizedSpread_CLNV* size;
	@@END VARIABLE: wDollarRealizedSpread_CLNV_SW@@
    @@BEGIN VARIABLE: wDollarRealizedSpread_CLNV_DW@@
	wDollarRealizedSpread_CLNV_DW=wDollarRealizedSpread_CLNV*dollar;
	@@END VARIABLE: wDollarRealizedSpread_CLNV_DW@@
	@@BEGIN VARIABLE: wPercentRealizedSpread_CLNV_SW@@
    wPercentRealizedSpread_CLNV_SW=wPercentRealizedSpread_CLNV* size;
	@@END VARIABLE: wPercentRealizedSpread_CLNV_SW@@
	@@BEGIN VARIABLE: wPercentRealizedSpread_CLNV_DW@@
    wPercentRealizedSpread_CLNV_DW=wPercentRealizedSpread_CLNV*dollar;
	@@END VARIABLE: wPercentRealizedSpread_CLNV_DW@@
	@@BEGIN VARIABLE: wDollarPriceImpact_CLNV_SW@@
    wDollarPriceImpact_CLNV_SW=wDollarPriceImpact_CLNV* size;
	@@END VARIABLE: wDollarPriceImpact_CLNV_SW@@
	@@BEGIN VARIABLE: wDollarPriceImpact_CLNV_DW@@
    wDollarPriceImpact_CLNV_DW=wDollarPriceImpact_CLNV*dollar;
	@@END VARIABLE: wDollarPriceImpact_CLNV_DW@@
	@@BEGIN VARIABLE: wPercentPriceImpact_CLNV_SW@@
    wPercentPriceImpact_CLNV_SW=wPercentPriceImpact_CLNV* size;
	@@END VARIABLE: wPercentPriceImpact_CLNV_SW@@
	@@BEGIN VARIABLE: wPercentPriceImpact_CLNV_DW@@
    wPercentPriceImpact_CLNV_DW=wPercentPriceImpact_CLNV*dollar;
	@@END VARIABLE: wPercentPriceImpact_CLNV_DW@@
run;

/* Find average across firm-day */
proc sql; 
    create table RealizedSpreadsandPriceImpacts 
    as select sym_root,date,
    sum(dollar) as sumdollar,
    sum(size) as sumsize,
    mean(wDollarRealizedSpread_LR) as @@BEGIN VARIABLE: DollarRealizedSpread_LR_Ave@@DollarRealizedSpread_LR_Ave@@END VARIABLE: DollarRealizedSpread_LR_Ave@@,
    mean(wDollarRealizedSpread_EMO) as @@BEGIN VARIABLE: DollarRealizedSpread_EMO_Ave@@DollarRealizedSpread_EMO_Ave@@END VARIABLE: DollarRealizedSpread_EMO_Ave@@,
    mean(wDollarRealizedSpread_CLNV) as @@BEGIN VARIABLE: DollarRealizedSpread_CLNV_Ave@@DollarRealizedSpread_CLNV_Ave@@END VARIABLE: DollarRealizedSpread_CLNV_Ave@@,
    mean(wPercentRealizedSpread_LR) as @@BEGIN VARIABLE: PercentRealizedSpread_LR_Ave@@PercentRealizedSpread_LR_Ave@@END VARIABLE: PercentRealizedSpread_LR_Ave@@,
    mean(wPercentRealizedSpread_EMO) as @@BEGIN VARIABLE: PercentRealizedSpread_EMO_Ave@@PercentRealizedSpread_EMO_Ave@@END VARIABLE: PercentRealizedSpread_EMO_Ave@@,
    mean(wPercentRealizedSpread_CLNV) as @@BEGIN VARIABLE: PercentRealizedSpread_CLNV_Ave@@PercentRealizedSpread_CLNV_Ave@@END VARIABLE: PercentRealizedSpread_CLNV_Ave@@,
    mean(wDollarPriceImpact_LR) as @@BEGIN VARIABLE: DollarPriceImpact_LR_Ave@@DollarPriceImpact_LR_Ave@@END VARIABLE: DollarPriceImpact_LR_Ave@@,
    mean(wDollarPriceImpact_EMO) as @@BEGIN VARIABLE: DollarPriceImpact_EMO_Ave@@DollarPriceImpact_EMO_Ave@@END VARIABLE: DollarPriceImpact_EMO_Ave@@,
    mean(wDollarPriceImpact_CLNV) as @@BEGIN VARIABLE: DollarPriceImpact_CLNV_Ave@@DollarPriceImpact_CLNV_Ave@@END VARIABLE: DollarPriceImpact_CLNV_Ave@@,
    mean(wPercentPriceImpact_LR) as @@BEGIN VARIABLE: PercentPriceImpact_LR_Ave@@PercentPriceImpact_LR_Ave@@END VARIABLE: PercentPriceImpact_LR_Ave@@,
    mean(wPercentPriceImpact_EMO) as @@BEGIN VARIABLE: PercentPriceImpact_EMO_Ave@@PercentPriceImpact_EMO_Ave@@END VARIABLE: PercentPriceImpact_EMO_Ave@@,
    mean(wPercentPriceImpact_CLNV) as @@BEGIN VARIABLE: PercentPriceImpact_CLNV_Ave@@PercentPriceImpact_CLNV_Ave@@END VARIABLE: PercentPriceImpact_CLNV_Ave@@,
	sum(wDollarRealizedSpread_LR_SW) as @@BEGIN VARIABLE: waDollarRealizedSpread_LR_SW@@waDollarRealizedSpread_LR_SW@@END VARIABLE: waDollarRealizedSpread_LR_SW@@,
    sum(wDollarRealizedSpread_LR_DW) as @@BEGIN VARIABLE: waDollarRealizedSpread_LR_DW@@waDollarRealizedSpread_LR_DW@@END VARIABLE: waDollarRealizedSpread_LR_DW@@,
    sum(wPercentRealizedSpread_LR_SW) as @@BEGIN VARIABLE: waPercentRealizedSpread_LR_SW@@waPercentRealizedSpread_LR_SW@@END VARIABLE: waPercentRealizedSpread_LR_SW@@,
    sum(wPercentRealizedSpread_LR_DW) as @@BEGIN VARIABLE: waPercentRealizedSpread_LR_DW@@waPercentRealizedSpread_LR_DW@@END VARIABLE: waPercentRealizedSpread_LR_DW@@,
    sum(wDollarPriceImpact_LR_SW) as @@BEGIN VARIABLE: waDollarPriceImpact_LR_SW@@waDollarPriceImpact_LR_SW@@END VARIABLE: waDollarPriceImpact_LR_SW@@,
    sum(wDollarPriceImpact_LR_DW) as @@BEGIN VARIABLE: waDollarPriceImpact_LR_DW@@waDollarPriceImpact_LR_DW@@END VARIABLE: waDollarPriceImpact_LR_DW@@,
    sum(wPercentPriceImpact_LR_SW) as @@BEGIN VARIABLE: waPercentPriceImpact_LR_SW@@waPercentPriceImpact_LR_SW@@END VARIABLE: waPercentPriceImpact_LR_SW@@,
    sum(wPercentPriceImpact_LR_DW) as @@BEGIN VARIABLE: waPercentPriceImpact_LR_DW@@waPercentPriceImpact_LR_DW@@END VARIABLE: waPercentPriceImpact_LR_DW@@, 
	sum(wDollarRealizedSpread_EMO_SW) as @@BEGIN VARIABLE: waDollarRealizedSpread_EMO_SW@@waDollarRealizedSpread_EMO_SW@@END VARIABLE: waDollarRealizedSpread_EMO_SW@@,
    sum(wDollarRealizedSpread_EMO_DW) as @@BEGIN VARIABLE: waDollarRealizedSpread_EMO_DW@@waDollarRealizedSpread_EMO_DW@@END VARIABLE: waDollarRealizedSpread_EMO_DW@@,
    sum(wPercentRealizedSpread_EMO_SW) as @@BEGIN VARIABLE: waPercentRealizedSpread_EMO_SW@@waPercentRealizedSpread_EMO_SW@@END VARIABLE: waPercentRealizedSpread_EMO_SW@@,
    sum(wPercentRealizedSpread_EMO_DW) as @@BEGIN VARIABLE: waPercentRealizedSpread_EMO_DW@@waPercentRealizedSpread_EMO_DW@@END VARIABLE: waPercentRealizedSpread_EMO_DW@@,
    sum(wDollarPriceImpact_EMO_SW) as @@BEGIN VARIABLE: waDollarPriceImpact_EMO_SW@@waDollarPriceImpact_EMO_SW@@END VARIABLE: waDollarPriceImpact_EMO_SW@@,
    sum(wDollarPriceImpact_EMO_DW) as @@BEGIN VARIABLE: waDollarPriceImpact_EMO_DW@@waDollarPriceImpact_EMO_DW@@END VARIABLE: waDollarPriceImpact_EMO_DW@@,
    sum(wPercentPriceImpact_EMO_SW) as @@BEGIN VARIABLE: waPercentPriceImpact_EMO_SW@@waPercentPriceImpact_EMO_SW@@END VARIABLE: waPercentPriceImpact_EMO_SW@@,
    sum(wPercentPriceImpact_EMO_DW) as @@BEGIN VARIABLE: waPercentPriceImpact_EMO_DW@@waPercentPriceImpact_EMO_DW@@END VARIABLE: waPercentPriceImpact_EMO_DW@@, 
	sum(wDollarRealizedSpread_CLNV_SW) as @@BEGIN VARIABLE: waDollarRealizedSpread_CLNV_SW@@waDollarRealizedSpread_CLNV_SW@@END VARIABLE: waDollarRealizedSpread_CLNV_SW@@,
    sum(wDollarRealizedSpread_CLNV_DW) as @@BEGIN VARIABLE: waDollarRealizedSpread_CLNV_DW@@waDollarRealizedSpread_CLNV_DW@@END VARIABLE: waDollarRealizedSpread_CLNV_DW@@,
    sum(wPercentRealizedSpread_CLNV_SW) as @@BEGIN VARIABLE: waPercentRealizedSpread_CLNV_SW@@waPercentRealizedSpread_CLNV_SW@@END VARIABLE: waPercentRealizedSpread_CLNV_SW@@,
    sum(wPercentRealizedSpread_CLNV_DW) as @@BEGIN VARIABLE: waPercentRealizedSpread_CLNV_DW@@waPercentRealizedSpread_CLNV_DW@@END VARIABLE: waPercentRealizedSpread_CLNV_DW@@,
    sum(wDollarPriceImpact_CLNV_SW) as @@BEGIN VARIABLE: waDollarPriceImpact_CLNV_SW@@waDollarPriceImpact_CLNV_SW@@END VARIABLE: waDollarPriceImpact_CLNV_SW@@,
    sum(wDollarPriceImpact_CLNV_DW) as @@BEGIN VARIABLE: waDollarPriceImpact_CLNV_DW@@waDollarPriceImpact_CLNV_DW@@END VARIABLE: waDollarPriceImpact_CLNV_DW@@,
    sum(wPercentPriceImpact_CLNV_SW) as @@BEGIN VARIABLE: waPercentPriceImpact_CLNV_SW@@waPercentPriceImpact_CLNV_SW@@END VARIABLE: waPercentPriceImpact_CLNV_SW@@,
    sum(wPercentPriceImpact_CLNV_DW) as @@BEGIN VARIABLE: waPercentPriceImpact_CLNV_DW@@waPercentPriceImpact_CLNV_DW@@END VARIABLE: waPercentPriceImpact_CLNV_DW@@
	from Mid1 
    group by sym_root,date 
    order by sym_root,date; 
quit;

/* Calculate Dollar-Weighted (DW) and Share-Weighted (SW) Realized Spreads 
   and Price Impact */
data RealizedSpreadsandPriceImpacts;
    set RealizedSpreadsandPriceImpacts;
	@@BEGIN VARIABLE: DollarRealizedSpread_LR_SW@@
    DollarRealizedSpread_LR_SW=waDollarRealizedSpread_LR_SW/sumsize;
	@@END VARIABLE: DollarRealizedSpread_LR_SW@@
	@@BEGIN VARIABLE: DollarRealizedSpread_LR_DW@@
    DollarRealizedSpread_LR_DW=waDollarRealizedSpread_LR_DW/sumdollar;
	@@END VARIABLE: DollarRealizedSpread_LR_DW@@
	@@BEGIN VARIABLE: PercentRealizedSpread_LR_SW@@
    PercentRealizedSpread_LR_SW=waPercentRealizedSpread_LR_SW/sumsize;
	@@END VARIABLE: PercentRealizedSpread_LR_SW@@
	@@BEGIN VARIABLE: PercentRealizedSpread_LR_DW@@
    PercentRealizedSpread_LR_DW=waPercentRealizedSpread_LR_DW/sumdollar;
	@@END VARIABLE: PercentRealizedSpread_LR_DW@@
	@@BEGIN VARIABLE: DollarPriceImpact_LR_SW@@
    DollarPriceImpact_LR_SW=waDollarPriceImpact_LR_SW/sumsize;
	@@END VARIABLE: DollarPriceImpact_LR_SW@@
	@@BEGIN VARIABLE: DollarPriceImpact_LR_DW@@
    DollarPriceImpact_LR_DW=waDollarPriceImpact_LR_DW/sumdollar;
	@@END VARIABLE: DollarPriceImpact_LR_DW@@
	@@BEGIN VARIABLE: PercentPriceImpact_LR_SW@@
    PercentPriceImpact_LR_SW=waPercentPriceImpact_LR_SW/sumsize;
	@@END VARIABLE: PercentPriceImpact_LR_SW@@
	@@BEGIN VARIABLE: PercentPriceImpact_LR_DW@@
    PercentPriceImpact_LR_DW=waPercentPriceImpact_LR_DW/sumdollar;
	@@END VARIABLE: PercentPriceImpact_LR_DW@@
	@@BEGIN VARIABLE: DollarRealizedSpread_EMO_SW@@
    DollarRealizedSpread_EMO_SW=waDollarRealizedSpread_EMO_SW/sumsize;
	@@END VARIABLE: DollarRealizedSpread_EMO_SW@@
	@@BEGIN VARIABLE: DollarRealizedSpread_EMO_DW@@
    DollarRealizedSpread_EMO_DW=waDollarRealizedSpread_EMO_DW/sumdollar;
	@@END VARIABLE: DollarRealizedSpread_EMO_DW@@
	@@BEGIN VARIABLE: PercentRealizedSpread_EMO_SW@@
    PercentRealizedSpread_EMO_SW=waPercentRealizedSpread_EMO_SW/sumsize;
	@@END VARIABLE: PercentRealizedSpread_EMO_SW@@
	@@BEGIN VARIABLE: PercentRealizedSpread_EMO_DW@@
    PercentRealizedSpread_EMO_DW=waPercentRealizedSpread_EMO_DW/sumdollar;
	@@END VARIABLE: PercentRealizedSpread_EMO_DW@@
	@@BEGIN VARIABLE: DollarPriceImpact_EMO_SW@@
    DollarPriceImpact_EMO_SW=waDollarPriceImpact_EMO_SW/sumsize;
	@@END VARIABLE: DollarPriceImpact_EMO_SW@@
	@@BEGIN VARIABLE: DollarPriceImpact_EMO_DW@@
    DollarPriceImpact_EMO_DW=waDollarPriceImpact_EMO_DW/sumdollar;
	@@END VARIABLE: DollarPriceImpact_EMO_DW@@
	@@BEGIN VARIABLE: PercentPriceImpact_EMO_SW@@
    PercentPriceImpact_EMO_SW=waPercentPriceImpact_EMO_SW/sumsize;
	@@END VARIABLE: PercentPriceImpact_EMO_SW@@
	@@BEGIN VARIABLE: PercentPriceImpact_EMO_DW@@
    PercentPriceImpact_EMO_DW=waPercentPriceImpact_EMO_DW/sumdollar;
	@@END VARIABLE: PercentPriceImpact_EMO_DW@@
	@@BEGIN VARIABLE: DollarRealizedSpread_CLNV_SW@@
    DollarRealizedSpread_CLNV_SW=waDollarRealizedSpread_CLNV_SW/sumsize;
	@@END VARIABLE: DollarRealizedSpread_CLNV_SW@@
    @@BEGIN VARIABLE: DollarRealizedSpread_CLNV_DW@@
	DollarRealizedSpread_CLNV_DW=waDollarRealizedSpread_CLNV_DW/sumdollar;
	@@END VARIABLE: DollarRealizedSpread_CLNV_DW@@
	@@BEGIN VARIABLE: PercentRealizedSpread_CLNV_SW@@
    PercentRealizedSpread_CLNV_SW=waPercentRealizedSpread_CLNV_SW/sumsize;
	@@END VARIABLE: PercentRealizedSpread_CLNV_SW@@
	@@BEGIN VARIABLE: PercentRealizedSpread_CLNV_DW@@
    PercentRealizedSpread_CLNV_DW=waPercentRealizedSpread_CLNV_DW/sumdollar;
	@@END VARIABLE: PercentRealizedSpread_CLNV_DW@@
	@@BEGIN VARIABLE: DollarPriceImpact_CLNV_SW@@
    DollarPriceImpact_CLNV_SW=waDollarPriceImpact_CLNV_SW/sumsize;
	@@END VARIABLE: DollarPriceImpact_CLNV_SW@@
	@@BEGIN VARIABLE: DollarPriceImpact_CLNV_DW@@
    DollarPriceImpact_CLNV_DW=waDollarPriceImpact_CLNV_DW/sumdollar;
	@@END VARIABLE: DollarPriceImpact_CLNV_DW@@
	@@BEGIN VARIABLE: PercentPriceImpact_CLNV_SW@@
    PercentPriceImpact_CLNV_SW=waPercentPriceImpact_CLNV_SW/sumsize;
	@@END VARIABLE: PercentPriceImpact_CLNV_SW@@
	@@BEGIN VARIABLE: PercentPriceImpact_CLNV_DW@@
    PercentPriceImpact_CLNV_DW=waPercentPriceImpact_CLNV_DW/sumdollar;
	@@END VARIABLE: PercentPriceImpact_CLNV_DW@@
	drop waDollarRealizedSpread_LR_SW waDollarRealizedSpread_LR_DW
	     waPercentRealizedSpread_LR_SW waPercentRealizedSpread_LR_DW
		 waDollarPriceImpact_LR_SW waDollarPriceImpact_LR_DW
         waPercentPriceImpact_LR_SW waPercentPriceImpact_LR_DW
         waDollarRealizedSpread_EMO_SW waDollarRealizedSpread_EMO_DW
	     waPercentRealizedSpread_EMO_SW waPercentRealizedSpread_EMO_DW
		 waDollarPriceImpact_EMO_SW waDollarPriceImpact_EMO_DW
         waPercentPriceImpact_EMO_SW waPercentPriceImpact_EMO_DW
	     waDollarRealizedSpread_CLNV_SW waDollarRealizedSpread_CLNV_DW
	     waPercentRealizedSpread_CLNV_SW waPercentRealizedSpread_CLNV_DW
		 waDollarPriceImpact_CLNV_SW waDollarPriceImpact_CLNV_DW
         waPercentPriceImpact_CLNV_SW waPercentPriceImpact_CLNV_DW;
run;
/* STEP 13: DOWNLOAD THE FILES YOU WANT TO YOUR PROJECT FOLDER

   By default, only the last three output files are downloaded to the 
   "project" folder. You can download all nine of the files by 
   removing the "comment outs" in the statements below */

/*data project.DailyNBBO;set DailyNBBO;run;*/

/*data project.DailyQuote;set DailyQuote;run;*/

/*data project.DailyTrade;set DailyTrade;run; */

/*data project.OfficialCompleteNBBO;set OfficialCompleteNBBO;run;*/

/*data project.TradesandCorrespondingNBBO;
  set TradesandCorrespondingNBBO;run;*/

/*data project.BuySellIndicators;set BuySellIndicators;run; */

data project.QuotedSpreadsandDepths;set QuotedSpreadsandDepths;run;

data project.EffectiveSpreads;set EffectiveSpreads;run;

data project.RealizedSpreadsandPriceImpacts;
set RealizedSpreadsandPriceImpacts;run;